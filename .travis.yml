dist: trusty
sudo: false
matrix:
  include:
  - language: csharp
    mono: none
    dotnet: 2.1
    before_script:
    - echo 'test all from this directory...'
    script:
    - dotnet test TestTemplate/cSharp/ConsoleWithTest/xUnitTestStuff
    - dotnet test Adapter/cSharp/Adapter/TestAdapter      
  - language: python
    python: 3.6
    before_script:
    - cd Bridge/python
    script:
    - python echo.py
  - language: java
    jdk: oraclejdk8
    before_script:
    - echo 'start of java'
    script:
    - "./gradleTests.sh"
  - language: objective-c
    osx_image: xcode10.1
    before_script:
    - ./install_swiftlint.sh
    script:
    - xcodebuild clean build -project ./SOLID/swift/SOLIDplayground/SOLIDplayground.xcodeproj -scheme SOLIDplayground CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=12.1' -quiet
    - xcodebuild test -project ./SOLID/swift/SOLIDplayground/SOLIDplayground.xcodeproj -scheme SOLIDplayground
      -destination 'platform=iOS Simulator,name=iPhone X,OS=12.1'  -enableCodeCoverage  YES -quiet
  - language: objective-c
    osx_image: xcode10
    before_script:
    - echo 'xcode10'
    script:
    - xcodebuild clean build -project ./Facade/swift/Facade/Facade.xcodeproj -scheme Facade CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=12.0' -quiet
    - xcodebuild test -project ./Facade/swift/Facade/Facade.xcodeproj -scheme Facade
      -destination 'platform=iOS Simulator,name=iPhone X,OS=12.0'  -enableCodeCoverage  YES -quiet      
  - language: objective-c
    osx_image: xcode9.4
    podfile: TestTemplate/swift/DI/DI/Podfile
    before_script:
    - echo "Currently separate Xcode project for each design"
    script:
    - xcodebuild clean build -project ./Bridge/swift/Bridge/Bridge.xcodeproj -scheme Bridge CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=11.4' -quiet
    - xcodebuild test -project ./Bridge/swift/Bridge/Bridge.xcodeproj -scheme Bridge -destination 'platform=iOS
      Simulator,name=iPhone X,OS=11.4' -enableCodeCoverage YES -quiet
    - xcodebuild clean build -project ./Visitor/swift/Visitor/Visitor.xcodeproj -scheme Visitor CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=11.4' -quiet
    - xcodebuild test -project ./Visitor/swift/Visitor/Visitor.xcodeproj -scheme Visitor -destination 'platform=iOS
      Simulator,name=iPhone X,OS=11.4' -enableCodeCoverage YES -quiet
    - xcodebuild clean build -project ./Composite/swift/Composite/Composite.xcodeproj -scheme Composite CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=11.4' -quiet
    - xcodebuild test -project ./Composite/swift/Composite/Composite.xcodeproj -scheme Composite -destination 'platform=iOS
      Simulator,name=iPhone X,OS=11.4' -enableCodeCoverage YES -quiet
    - xcodebuild clean build -project ./TestTemplate/swift/MocTests/MocTests.xcodeproj -scheme MocTests CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=11.4' -quiet
    - xcodebuild test -project ./TestTemplate/swift/MocTests/MocTests.xcodeproj -scheme MocTests -destination 'platform=iOS
      Simulator,name=iPhone X,OS=11.4' -enableCodeCoverage YES -quiet
    - xcodebuild clean build -project ./TestTemplate/swift/Sqlite/Sqlite.xcodeproj -scheme Sqlite CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=11.4' -quiet
    - xcodebuild test -project ./TestTemplate/swift/Sqlite/Sqlite.xcodeproj -scheme Sqlite -destination 'platform=iOS
      Simulator,name=iPhone X,OS=11.4' -enableCodeCoverage YES -quiet
    - pod --project-directory=./TestTemplate/swift/DI/DI/ update
    - xcodebuild clean build -workspace ./TestTemplate/swift/DI/DI/DI.xcworkspace -scheme DI CODE_SIGNING_REQUIRED=NO
      -destination 'platform=iOS Simulator,name=iPhone X,OS=11.4' -quiet
    - xcodebuild test -workspace ./TestTemplate/swift/DI/DI/DI.xcworkspace -scheme DI -destination 'platform=iOS
      Simulator,name=iPhone X,OS=11.4' -enableCodeCoverage YES -quiet                       
  - language: node_js
    node_js:
    - '9'
    addons:
      chrome: stable
      apt:
        sources:
        - google-chrome
        packages:
        - google-chrome-stable
    before_script:
    - cd Bridge/angular/bridge/
    - npm install -g codecov
    - npm install coveralls
    - yarn
    - ng lint
    script:
    - export CHROME_BIN=chromium-browser
    - xvfb-run -a npm run test -- --browsers=ChromeNoSandbox --code-coverage --watch=false
    - xvfb-run -a npm run e2e --
  - language: go
    go:
    - 1.11
    env:
    - GOMAXPROCS=4
    os:
    - linux
    install:
    - go get github.com/stretchr/testify/assert
    before_install:
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
      > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - "./cc-test-reporter before-build"
    script:
    - export GOPATH=`pwd`/Bridge/go/bridge
    - go test -race -v -coverprofile=circleBridge.out circle/bridge
    - export GOPATH=`pwd`/Visitor/go/visitor
    - go test -race -v -coverprofile=circleBridge.out house/visitor

    after_success:
    - cat c0.out > c.out
    - bash <(curl -s https://codecov.io/bash)
    - "./cc-test-reporter after-build --exit-code $TRAVIS_TEST_RESULT"
before_install:
- openssl aes-256-cbc -k "$super_secret_password" -in ./encrypt/septa.json.enc -out ./encrypt/septa.json -d
- mkdir -p $HOME/.google_java_firebase
- cp ./encrypt/septa.json $HOME/.google_java_firebase



